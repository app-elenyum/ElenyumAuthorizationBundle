services:
  _defaults:
    autowire: true
    autoconfigure: true

  elenyum_user:
    public: true
    class: 'Elenyum\Authorization\Controller\UserController'
  elenyum_login:
    public: true
    class: 'Elenyum\Authorization\Controller\LoginController'
  elenyum_check:
    public: true
    class: 'Elenyum\Authorization\Controller\CheckController'
  elenyum_registration:
    public: true
    class: 'Elenyum\Authorization\Controller\RegistrationController'

#  # makes classes in src/ available to be used as services
#  # this creates a service per class whose id is the fully-qualified class name
  Elenyum\Authorization\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/ElenyumMakerBundle.php'

#  Elenyum\Authorization\EventListener\AttributeAuthorizationListener:
#    tags:
#      - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }

  Elenyum\Authorization\EventListener\AttributeAuthorizationListener:
    arguments:
      $security: '@security.helper' # Injecting the Security service
    tags:
      - { name: 'kernel.event_subscriber' }
